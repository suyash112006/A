Algorithm: 
Algorithm Union (arr1 [], arr2 []):  
For union of two arrays, follow the following merge procedure. 
1) Use two index variables i and j, initial values i = 0, j = 0  
2) If arr1[i] is smaller than arr2[j] then print arr1[i] and increment i. 
3) If arr1[i] is greater than arr2[j] then print arr2[j] and increment j.  
4) If both are same then print any of them and increment both i and j.  
5)Print remaining elements of the larger array. 


Algorithm Intersection(arr1[], arr2[]): 
For Intersection of two arrays, print the element only if the element is present in both arrays. 
1) Use two index variables i and j, initial values i = 0, j = 0  
2) If arr1[i] is smaller than arr2[j] then increment i.  
3) If arr1[i] is greater than arr2[j] then increment j. 
4) If both are same then print any of them and increment both i and j. 


Pseudo code for union of two sets: 
# Set union method 
# initialize A and B 
A = {1, 2, 3, 4, 5} 
B = {4, 5, 6, 7, 8} 
# use | operator  
# Output: {1, 2, 3, 4, 5, 6, 7, 8} 
print(A | B) 


Pseudo code for intersection of two sets : 
# Intersection of sets 
# initialize A and B 
A = {1, 2, 3, 4, 5} 
B = {4, 5, 6, 7, 8} 
# use& operator 
# Output: {4, 5} 
print(A & B) 


Pseudo code for difference of two sets: 
# Difference of two sets 
# initialize A and B 
A = {1, 2, 3, 4, 5} 
B = {4, 5, 6, 7, 8} 
# use - operator on A 
# Output: {1, 2, 3} 
print(A - B) 


Pseudo code for symmetric difference of two sets : 
# Symmetric difference of two sets 
# initialize A and B 
A = {1, 2, 3, 4, 5} 
B = {4, 5, 6, 7, 8} 
# use ^ operator 
# Output: {1, 2, 3, 6, 7, 8} 
print(A ^ B)